  cd <chemin d'accès>
    permet de se déplacer dans un répertoire

  cd -
    permet de retourner dans le lieu précédent

  cd ..
    permet de retourner dans le répertoire parent du
    répertoire courant

  cd
    permet de revenir au lieu initial

  pwd
    permet d'afficher le lieu actuel

  ls
    permet d'afficher la liste des lieux accessibles
    depuis la position actuelle

  ls -A
    affiche les fichiers du répertoire courant, en
    incluant les fichiers cachés

    Un fichier est "caché" lorque son nom commence par
    le caractère "."

  mkdir <répertoire>
    pour créer un nouveau répertoire dans le répertoire
    courant

  rm <fichier1> <fichier2> ... <fichier>
    supprime (définitivement) des fichiers

  mv <fichier1> <fichier2> ... <fichiern> <dossier>
    déplace les fichiers dans un autre dossier

  ~
    abbréviation pour le répertoire initial
    (peut dépendre du shell utilisé)
    exemple : ~/Dossier représente le dossier "Dossier"
    dans le répertoire initial


  <Tabulation>
    la touche tabulation permet de "compléter" un nom
    de fichier ou de répertoire lorsqu'on a tapé
    seulement le début
    deux appuis successifs permettent d'afficher la
    liste de complétions possibles

  <*>
  <?>

    le caractère "*" est un "joker" pour n'importe
    quelle chaine de caractère

    le caractère "?" est un "joker" pour n'importe
    caractère

    dans un nom de fichier, il sont remplacé
    automatiquement par la liste de tous les fichiers
    correspondant

    par exemple, si le répertoire contient
        Fichier-1 Dossier-1 fichier-14 lustucru
    alors
      *     -->  Fichier-1 Dossier-1 fichier-14 lustucru
      *1    -->  Fichier-1 Dossier-1
      *s*   -->  Dossier-1 lustucru
      x*    -->  erreur, aucun fichier ne correspond
      *-?   -->  Fichier-1 Dossier-1
      *-??  -->  fichier-14

  cp <fichier1> <fichier2> ... <fichiern> <dossier>
    copie les fichiers dans un autre dossier

  date -r <file>
     affiche la date de dernière modification d’un fichier

  ls -R
    pour afficher la liste des fichiers, y compris dans
    les sous-répertoires

  tree
    pour afficher l'arborescence des fichiers et
    répertoires depuis le répertoire courant

    remarque : la commande "tree" n'est pas toujours
    installée par défaut.

  cal
    affiche en petit calendrier du mois courant

  cal YYYY
    affiche en petit calendrier pour l'année YYYY

  head <fichier>
    affiche les 10 premières lignes du fichier

  head -n <k> <fichier>
    affiche les k premières lignes du ficiher

  tail <fichier>
    affiche les 10 dernières lignes du fichier

  tail -n <k> <fichier>
    affiche les k dernières lignes du ficiher

  <commande1> | <commande2>
    envoie le résultat de la première commande comme
    argument à la deuxième

  xeyes
    affiche deux yeux qui suivent le mouvement de la
    souris

  Control-Z
    TODO

  bg
    permet de mettre une commande en pause en tache de
    fond (bg = "BackGround")

  fg
    relance une commande en pause (après un Control-z),
    (fg = "ForeGround", par opposition à bg =
    "BackGround")

  jobs
    affiche la liste des commande lancées par le shell,
    soit en pause ("Stopped"), soit en exécution
    ("Running")

  nano <fichier>
    édite le fichier dans le terminal
    Les raccourcis claviers sont affichés en bas :
      Exit          pour quitter nano
      WriteOut      pour sauver le fichier
      Where Is      pour rechercher dans le texte
    (remarque, nano n'est pas forcément installé par
    défaut...)

  ps
    pour afficher la liste des processus utilisés

  kill N
    tue le processus numéro N

  pstree
    pour afficher la liste de tous les processus, avec
    leur lien de parenté. L'option "-p" permet de voir
    le numéro du processus.

  kill N
    tue le processus numéro N.

  <cmd>  <  <nom_fichier>
    On peut remplacer l'entrée standard d'une commande
    par un fichier en utilisant une redirection "<". Au
    lieu de lire les lignes à partir du clavier, la
    commande <cmd> lira les lignes dans le fichier
    <nom_fichier>

  ./fichier
    Exécute un fichier exécutable en tant que
    programme. Il va de soi que Merlin l'est
    (exécutable)...

  <cmd> > <nom_fichier>
    Remplace la sortie standard (STDOUT) d'une
    commande par un fichier en utilisant une
    redirection ">".

  <cmd> 2> <nom_fichier>
    Similaire, mais redirige la sortie d'erreur
    (STDERR) vers le fichier donné.

  <cmd>  <  <nom_fichier>
    Remplace l'entrée standard (STDIN) d'une
    commande par un fichier en utilisant une
    redirection "<".

  find
    pour trouver des fichiers (voir notamment les
    options "-name" et "-iname")

  find
    pour trouver des fichiers (voir notamment l'option
    "-type")

  man <cmd>
    pour consulter l'aide de la commande <cmd>

    touches utilisées par la commande "man"
        q           pour quitter une page d'aide
        Space       pour faire défiler une page de l'aide
        / <chaine>  pour rechercher une chaine dans l'aide
        n           pour se déplacer à la prochaine occurence
                    de la chaine cherchée

  cat <fichier>
    affiche le contenu d'un fichier sur le terminal

  grep [options] <motif> <fichier1> ... <fichiern>
    recherche un motif parmis les fichiers
    Parmi les options, vous avez notamment
      -l  qui affiche juste le nom des fichiers
          contenant le motif

  xargs
    TODO

  grep [option] <motif> <fichier1> ... <fichiern>
    Filtre les lignes du fichier et ne concerve que
    celles qui contiennent le motif. Si aucun fichier
    n'est spécifié, grep filtre les lignes lues sur
    l'entrée standard.

    Option intéressante :
      -v : inverse la condition, les lignes conservées
           sont celle qui ne contiennent pas le motif.

  wc
    Compte le nombre de lignes/mots/lettres dans un
    fichier. Si aucun fichier n'est spécifié, wc compte
    les lignes/mots/lettres lus sur l'entrée standard.

